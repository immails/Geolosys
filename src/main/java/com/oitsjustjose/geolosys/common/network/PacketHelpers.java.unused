package com.oitsjustjose.geolosys.common.network;

import com.oitsjustjose.geolosys.Geolosys;
import net.minecraft.nbt.CompoundTag;
import net.minecraft.nbt.ListTag;
import net.minecraft.nbt.NbtUtils;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraftforge.registries.ForgeRegistries;

import java.util.HashSet;

public class PacketHelpers {
    public static final String BLOCK_NBT_NAME = "blocks";

    // public static HashSet<String> encodeBlocks(HashSet<BlockState> blocks) {
    //     // CompoundTag comp = new CompoundTag();
    //     HashSet<String> set = new HashSet();
    //     for (BlockState b : blocks) {
    //         set.add(ForgeRegistries.BLOCKS.getKey(b.getBlock()).toLanguageKey());
    //     }
    //     // comp.put(BLOCK_NBT_NAME, list);
    //     return set;
    // }

    // public static HashSet<String> decodeBlocks(CompoundTag comp) {
    //     HashSet<BlockState> ret = new HashSet<BlockState>();
    //     ListTag list = comp.getList(BLOCK_NBT_NAME, 10);
    //     list.forEach((c) -> {
    //         if (c instanceof CompoundTag) {
    //             // ret.add(NbtUtils.readBlockState(null, (CompoundTag) c)); // FIXME: Unknown behavior
    //         } else {
    //             Geolosys.getInstance().LOGGER.error("The following compound appears to be broken: {}", c);
    //         }
    //     });

    //     return ret;
    // }

    // public static String messagify(HashSet<String> blocks) {
    //     StringBuilder sb = new StringBuilder();
    //     // I hate old for-loops but I need the index.
    //     int idx = 0;
    //     for (String b : blocks) {
    //         sb.append(new ItemStack(b.getBlock()).getDisplayName().getString().replace("[", "").replace("]", ""));
    //         if ((idx + 2) == blocks.size()) {
    //             sb.append(" & ");
    //         } else if ((idx + 1) != blocks.size()) {
    //             sb.append(", ");
    //         }
    //         idx++;
    //     }
    //     return sb.toString();
    // }
}
