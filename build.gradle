buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "1.2.1"
}
apply plugin: 'net.minecraftforge.gradle'
import com.modrinth.minotaur.TaskModrinthUpload

group = 'com.oitsjustjose.geolosys' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Geolosys-${game_version}-${mod_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: "${game_version}"
    runs {
        client {
            workingDirectory project.file('run')
            properties 'mixin.env.disableRefMap': 'true'
            property 'forge.logging.console.level', 'debug'

            mods {
                geolosys {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            properties 'mixin.env.disableRefMap': 'true'
            property 'forge.logging.console.level', 'debug'

            mods {
                geolosys {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${game_version}-${forge_version}"
}

repositories {
    maven { url 'https://maven.blamejared.com' }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
    implementation fg.deobf("curse.maven:worldstripper-250603:3670854")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "geolosys",
                "Specification-Vendor"    : "oitsjustjose.com",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "oitsjustjose.com",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'Deobf'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'Sources'
    from sourceSets.main.allSource
}

artifacts {
    archives deobfJar
    archives sourcesJar
}

tasks.register('modrinth', TaskModrinthUpload.class).configure {
    dependsOn('assemble', 'reobfJar')
    onlyIf {
        project.hasProperty('modrinthApiKey')
    }

    token = project.hasProperty('MODRINTH_API_KEY') ? project.getProperty('MODRINTH_API_KEY') : ''
    projectId = 'gu7yAYhd'
    versionNumber = "${project.game_version}-${project.mod_version}"
    uploadFile = jar
    versionType = 'RELEASE'
    addGameVersion(project.game_version)
    changelog = file("./changelog.md").text
    addLoader('forge')
}

curseforge {
    apiKey = project.hasProperty("CURSEFORGE_API_KEY") ? project.CURSEFORGE_API_KEY : ""
    project {
        id = '271856'
        changelogType = 'markdown'
        changelog = file("./changelog.md")
        releaseType = 'release'
        addGameVersion project.game_version

        relations {
            requiredDependency 'patchouli'
            optionalDependency 'applied-energistics-2'
            optionalDependency 'extreme-reactors'
            optionalDependency 'biggerreactors'
            optionalDependency 'mekanism'
        }

        mainArtifact(jar) {
            displayName = "Geolosys ${game_version} ${mod_version}"
        }


        addArtifact(deobfJar) {
            displayName = "Geolosys ${game_version} ${mod_version} Deobf"
        }

        addArtifact(sourcesJar) {
            displayName = "Geolosys ${game_version} ${mod_version} Sources"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

def uploadTasks = ["curseforge", "modrinth"]

task uploadAll(dependsOn: uploadTasks) {
    group "upload"
    description "Uploads to all repositories (Curse & Modrinth)"
}